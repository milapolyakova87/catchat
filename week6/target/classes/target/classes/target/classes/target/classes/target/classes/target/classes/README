### Задание: Многопользовательский чат с фактами о котах

#### Цели проекта:

1. Разработать многопользовательское чат-приложение, которое позволяет пользователям обмениваться сообщениями.
2. Интегрировать функциональность извлечения случайных фактов о котах через доступ к внешнему Web API.

#### Основные требования:

##### Часть 1: Многопользовательский чат

1. Серверная часть:
    - Создайте серверное приложение, которое может обрабатывать несколько клиентских подключений одновременно.
    - Сервер должен принимать сообщения от клиентов и пересылать их всем подключённым клиентам, обеспечивая групповое
      общение.
    - Учтите обработку ошибок и некорректных сообщений, чтобы предотвратить сбои в работе сервера.

2. Клиентская часть:
    - Разработайте клиентское приложение, которое может подключаться к серверу через сеть.
    - Клиент должен иметь возможность отправлять текстовые сообщения, которые будут транслироваться всем остальным
      подключённым клиентам.
    - Реализуйте интерфейс (консольный или графический), позволяющий пользователю видеть входящие сообщения и вводить
      свои.

##### Часть 2: Интеграция с Web API для фактов о котах

1. Обработка команд:
    - Определите специальную команду (например, `/catfact`), которую пользователь может ввести для получения факта о
      коте.
    - При получении этой команды сервер должен сделать запрос к Web API для получения факта.

2. Работа с Web API:
    - Сервер должен делать HTTP-запрос к `https://catfact.ninja/fact`.
    - После получения ответа сервер извлекает случайный факт о коте из предоставленных данных.
    - Ответ приходит в формате JSON. Для его парсинга можно использовать
      fasterxml - ObjectMapper - https://javarush.com/quests/lectures/jru.module2.lecture31
    - Все ответы хранить в файлах на диске в 2 форматах в разных файлах. Через java сереиализацию и JSON

3. Рассылка факта:
    - После получения факта о коте сервер должен отправить его всем подключенным клиентам, как обычное сообщение.

#### Дополнительные задачи (опционально):

- Реализуйте регистрацию и авторизацию пользователей для улучшения безопасности.
- Ведите историю чата, чтобы новые пользователи могли видеть предыдущие сообщения.
- Добавьте возможность отправки команд на сервер для выполнения дополнительных функций (например, смены никнейма).
- Реализуйте возможность отключения клиента от сервера.

#### Рекомендации:

- Обратите внимание на обработку ошибок и особенности многопоточности при работе с сетью.
- Изучите принципы работы с сетью и обмена данными через сокеты, чтобы правильно реализовать обмен сообщениями.
- Ознакомьтесь с документацией Web API, чтобы правильно извлечь данные и распарсить их в своем приложении.
